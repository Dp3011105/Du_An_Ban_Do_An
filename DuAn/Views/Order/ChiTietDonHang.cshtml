@* @model ASMHT_PH53971.Models.DonHang

@{
    ViewData["Title"] = "Chi Tiết Đơn Hàng";
}

<h2 class="text-center mb-4">Chi Tiết Đơn Hàng</h2>

@if (Model == null)
{
    <div class="alert alert-warning text-center">
        <p>Không tìm thấy đơn hàng.</p>
    </div>
}
else
{
    <!-- Thông tin đơn hàng -->
    <div class="card mb-4">
        <div class="card-header bg-primary text-white">
            <h4>Thông Tin Đơn Hàng</h4>
        </div>
        <div class="card-body">
            <p><strong>Mã Đơn Hàng:</strong> @Model.MaDonHang</p>
            <p><strong>Thời Gian Đặt:</strong> @Model.ThoiGianDat.ToString("dd/MM/yyyy HH:mm")</p>
            <p>
                <strong>Trạng Thái:</strong>
                <span class="badge
                    @((Model.TrangThai == "Chua_Van_Chuyen") ? "badge-warning text-dark" : "badge-success")">
                    @Model.TrangThai
                </span>
            </p>
            <p><strong>Tổng Tiền:</strong> @Model.TongTien.ToString() VND</p>
        </div>
    </div>

    <!-- Hủy đơn nếu trạng thái là "Chưa Vận Chuyển" -->
    @if (Model.TrangThai == "Chua_Van_Chuyen")
    {
        <form id="capNhatTrangThaiForm" action="/DonHang/CapNhatTrangThai" method="post">
            <input type="hidden" name="MaDonHang" value="@Model.MaDonHang" />
            <input type="hidden" name="TrangThai" value="Huy_Don" />
            <button type="button" class="btn btn-danger btn-block" id="huyDonHangButton">Hủy Đơn</button>
        </form>
        <div id="statusMessage"></div>

    }
    else
    {
        <p class="text-muted mt-3"><strong>Trạng thái hiện tại của đơn hàng không cho phép thay đổi trạng thái.</strong></p>
    }

    <hr class="my-4" />

    <!-- Danh sách sản phẩm trong đơn hàng -->
    @if (Model.ChiTietDonHangs != null && Model.ChiTietDonHangs.Any())
    {
        <div class="table-responsive">
            <h4 class="mb-3">Danh Sách Sản Phẩm</h4>
            <table class="table table-striped table-bordered">
                <thead class="thead-dark">
                    <tr>
                        <th>#</th>
                        <th>Tên Món Ăn</th>
                        <th>Số Lượng</th>
                        <th>Giá</th>
                        <th>Thành Tiền</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.ChiTietDonHangs)
                    {
                        <tr>
                            <td>@item.MaChiTietDonHang</td>
                            <td>
                                @if (!string.IsNullOrEmpty(item.MaMonAnNavigation?.TenMonAn))
                                {
                                    @item.MaMonAnNavigation.TenMonAn
                                }
                                else if (!string.IsNullOrEmpty(item.MaComboNavigation?.TenCombo))
                                {
                                    @item.MaComboNavigation.TenCombo
                                }
                                else
                                {
                                    <span class="text-danger">Lỗi: Không tìm thấy tên sản phẩm</span>
                                }

                            </td>
                            <td>@item.SoLuong</td>
                            <td>@item.Gia.ToString() VND</td>
                            <td>@(item.SoLuong * item.Gia) VND</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <p class="text-muted">Không có chi tiết nào trong đơn hàng này.</p>
    }
}


<script>
    document.getElementById("huyDonHangButton").addEventListener("click", function () {
        const form = document.getElementById("capNhatTrangThaiForm");
        const formData = new FormData(form);

        fetch(form.action, {
            method: "POST",
            body: formData,
        })
            .then(response => response.json())
            .then(data => {
                const statusMessage = document.getElementById("statusMessage");
                if (data.success) {
                    statusMessage.innerHTML = `<div class="alert alert-success">${data.message}</div>`;
                    document.getElementById("huyDonHangButton").disabled = true;
                } else {
                    statusMessage.innerHTML = `<div class="alert alert-danger">${data.message}</div>`;
                }
            })
            .catch(error => {
                console.error("Lỗi:", error);
            });
    });

</script>

<link rel="stylesheet" href="~/daodien/css/bootstrap.css">
<link rel="stylesheet" href="~/daodien/css/fonts.css">
<link rel="stylesheet" href="~/daodien/css/style.css"> *@



@model DuAn.Models.Order



@{
    ViewData["Title"] = "Chi Tiết Đơn Hàng";
}

<style>
    /* Đảm bảo các thành phần đồng bộ với light/dark mode */
    body.light .card {
        background-color: white;
        color: black; /* Chữ đen trong light mode */
    }

    body.dark .card {
        background-color: #1f1f1f;
        color: white; /* Chữ trắng trong dark mode */
    }

    body.light .card-header {
        background-color: #0d6efd;
        color: white;
    }

    body.dark .card-header {
        background-color: #4dabf7;
        color: black;
    }

    body.light .alert-warning {
        background-color: #fff3cd;
        color: #856404;
    }

    body.dark .alert-warning {
        background-color: #5a4a00;
        color: #ffeb99;
    }

    body.light .alert-success {
        background-color: #d4edda;
        color: #155724;
    }

    body.dark .alert-success {
        background-color: #2a6640;
        color: #b8e6c5;
    }

    body.light .alert-danger {
        background-color: #f8d7da;
        color: #721c24;
    }

    body.dark .alert-danger {
        background-color: #7a2e34;
        color: #f5b8bd;
    }

    body.light .table {
        background-color: white;
        color: black; /* Chữ đen trong light mode */
    }

    body.dark .table {
        background-color: #1f1f1f;
        color: white; /* Chữ trắng trong dark mode */
    }

    body.light .table-striped tbody tr:nth-of-type(odd) {
        background-color: rgba(0, 0, 0, 0.05);
    }

    body.dark .table-striped tbody tr:nth-of-type(odd) {
        background-color: rgba(255, 255, 255, 0.05);
    }

    body.light .thead-dark {
        background-color: #343a40;
        color: white;
    }

    body.dark .thead-dark {
        background-color: #2a2a2a;
        color: white;
    }

    body.light .badge-warning {
        background-color: #ffc107;
        color: black;
    }

    body.dark .badge-warning {
        background-color: #d4a700;
        color: white;
    }

    body.light .badge-success {
        background-color: #28a745;
        color: white;
    }

    body.dark .badge-success {
        background-color: #2ecc71;
        color: black;
    }

    body.light .btn-danger {
        background-color: #dc3545;
        border-color: #dc3545;
        color: white;
    }

    body.light .btn-danger:hover {
        background-color: #c82333;
        border-color: #c82333;
        color: white;
    }

    body.dark .btn-danger {
        background-color: #ff6b6b;
        border-color: #ff6b6b;
        color: black;
    }

    body.dark .btn-danger:hover {
        background-color: #e65b5b;
        border-color: #e65b5b;
        color: black;
    }

    body.light .text-muted {
        color: #6c757d !important;
    }

    body.dark .text-muted {
        color: #a0a0a0 !important;
    }

    body.light h2, body.light h4 {
        color: #0d6efd;
    }

    body.dark h2, body.dark h4 {
        color: #4dabf7;
    }

    /* Đảm bảo chữ trong mọi phần tử đều hiển thị rõ */
    body.light p, body.light td, body.light th {
        color: black;
    }

    body.dark p, body.dark td, body.dark th {
        color: white;
    }

    body.light .text-danger {
        color: #dc3545 !important;
    }

    body.dark .text-danger {
        color: #ff6b6b !important;
    }

    /* Tùy chỉnh giao diện giống trang TMĐT */
    .order-container {
        max-width: 1000px;
        margin: 0 auto;
        padding: 20px;
    }

    .order-info .card-body p {
        margin-bottom: 10px;
        font-size: 1.1rem;
    }

    .order-info .badge {
        font-size: 0.9rem;
        padding: 5px 10px;
    }

    .order-items table {
        margin-top: 20px;
    }

    .order-items th, .order-items td {
        vertical-align: middle;
    }

    .btn-danger {
        padding: 10px 20px;
        font-weight: bold;
    }

    hr {
        border-color: rgba(0, 0, 0, 0.1);
    }

    body.dark hr {
        border-color: rgba(255, 255, 255, 0.1);
    }
</style>

<div class="order-container">
    <h2 class="text-center mb-4">Chi Tiết Đơn Hàng</h2>

    @if (Model == null)
    {
        <div class="alert alert-warning text-center">
            <p>Không tìm thấy đơn hàng.</p>
        </div>
    }
    else
    {
        <!-- Thông tin đơn hàng -->
        <div class="card order-info mb-4 shadow">
            <div class="card-header">
                <h4 class="mb-0">Thông Tin Đơn Hàng</h4>
            </div>
            <div class="card-body">
                <p><strong>Mã Đơn Hàng:</strong> @Model.MaDonHang</p>
                <p><strong>Thời Gian Đặt:</strong> @Model.ThoiGianDat.ToString("dd/MM/yyyy HH:mm")</p>
                <p>
                    <strong>Trạng Thái:</strong>
                    <span class="badge @(Model.TrangThai == "Chua_Van_Chuyen" ? "badge-warning text-dark" : "badge-success")">
                        @(Model.TrangThai == "Chua_Van_Chuyen" ? "Chưa Vận Chuyển" : Model.TrangThai)
                    </span>
                </p>
                <p><strong>Tổng Tiền:</strong> @Model.TongTien.ToString("N0") VND</p>
            </div>
        </div>

        <!-- Hủy đơn nếu trạng thái là "Chưa Vận Chuyển" -->
        @if (Model.TrangThai == "Chua_Van_Chuyen")
        {
            <form id="capNhatTrangThaiForm" action="/Order/CapNhatTrangThai" method="post" class="mb-4">
                <input type="hidden" name="MaDonHang" value="@Model.MaDonHang" />
                <input type="hidden" name="TrangThai" value="Huy_Don" />

                <div class="form-group">
                    <label for="lyDoHuyDon">Lý Do Hủy Đơn:</label>
                    <textarea class="form-control" id="lyDoHuyDon" name="LyDoHuyDon" rows="3" placeholder="Nhập lý do hủy đơn..." required></textarea>
                </div>

                <button type="button" class="btn btn-danger btn-block" id="huyDonHangButton">Hủy Đơn Hàng</button>
            </form>
            <div id="statusMessage" class="mb-4"></div>
        }

        else
        {
            <p class="text-muted mt-3"><strong>Trạng thái hiện tại của đơn hàng không cho phép thay đổi.</strong></p>
        }

        <hr class="my-4" />

        <!-- Danh sách sản phẩm trong đơn hàng -->
        @if (Model.ChiTietDonHangs != null && Model.ChiTietDonHangs.Any())
        {
            <div class="order-items">
                <h4 class="mb-3">Danh Sách Sản Phẩm</h4>
                <div class="table-responsive">
                    <table class="table table-striped table-bordered">
                        <thead class="thead-dark">
                            <tr>
                                <th>#</th>
                                <th>Tên Món Ăn</th>
                                <th>Số Lượng</th>
                                <th>Giá</th>
                                <th>Thành Tiền</th>
                                <th>Địa Chỉ Nhận Hàng</th> <!-- thêm dòng này -->
                                <th>Lý do hủy đơn</th> <!-- thêm dòng này -->
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.ChiTietDonHangs)
                            {
                                <tr>
                                    <td>@item.MaChiTietDonHang</td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(item.MaMonAnNavigation?.TenMonAn))
                                        {
                                            @item.MaMonAnNavigation.TenMonAn
                                        }
                                        else if (!string.IsNullOrEmpty(item.MaComboNavigation?.TenCombo))
                                        {
                                            @item.MaComboNavigation.TenCombo
                                        }
                                        else
                                        {
                                            <span class="text-danger">Lỗi: Không tìm thấy tên sản phẩm</span>
                                        }
                                    </td>
                                    <td>@item.SoLuong</td>
                                    <td>@item.Gia.ToString("N0") VND</td>
                                    <td>@(item.SoLuong * item.Gia) VND</td>
                                    <td>@item.DiaChiNhanHang</td> <!-- hiển thị -->
                                    <td>@item.lyDoHuyDon</td> <!-- hiển thị -->
                                </tr>
                            }
                        </tbody>

                    </table>
                </div>
            </div>
        }
        else
        {
            <p class="text-muted">Không có chi tiết nào trong đơn hàng này.</p>
        }
    }
</div>

<script>
    document.getElementById("huyDonHangButton")?.addEventListener("click", function () {
        const lyDo = document.getElementById("lyDoHuyDon").value.trim();

        if (lyDo === "") {
            alert("Vui lòng nhập lý do hủy đơn.");
            return;
        }

        const form = document.getElementById("capNhatTrangThaiForm");
        const formData = new FormData(form);

        fetch(form.action, {
            method: "POST",
            body: formData,
        })
            .then(response => response.json())
            .then(data => {
                const statusMessage = document.getElementById("statusMessage");
                if (data.success) {
                    statusMessage.innerHTML = `<div class="alert alert-success">${data.message}</div>`;
                    document.getElementById("huyDonHangButton").disabled = true;
                    document.getElementById("lyDoHuyDon").disabled = true;
                } else {
                    statusMessage.innerHTML = `<div class="alert alert-danger">${data.message}</div>`;
                }
            })
            .catch(error => {
                console.error("Lỗi:", error);
                document.getElementById("statusMessage").innerHTML = `<div class="alert alert-danger">Đã xảy ra lỗi khi xử lý yêu cầu.</div>`;
            });
    });
</script>


<link rel="stylesheet" href="~/daodien/css/bootstrap.css">
<link rel="stylesheet" href="~/daodien/css/fonts.css">
<link rel="stylesheet" href="~/daodien/css/style.css">