@* 


@model List<DuAn.Models.Combo>

<style>
    /* Đảm bảo các thành phần đồng bộ với light/dark mode */
    body.light .card {
        background-color: white;
        color: black; /* Chữ đen trong light mode */
    }

    body.dark .card {
        background-color: #1f1f1f;
        color: white; /* Chữ trắng trong dark mode */
    }

    body.light .form-control {
        background-color: white;
        color: black;
        border-color: #ced4da;
    }

    body.dark .form-control {
        background-color: #333;
        color: white;
        border-color: #555;
    }

    body.light .btn-primary {
        background-color: #0d6efd;
        border-color: #0d6efd;
        color: white;
    }

        body.light .btn-primary:hover {
            background-color: #0b5ed7;
            border-color: #0b5ed7;
            color: white;
        }

    body.dark .btn-primary {
        background-color: #4dabf7;
        border-color: #4dabf7;
        color: black;
    }

        body.dark .btn-primary:hover {
            background-color: #3398e3;
            border-color: #3398e3;
            color: black;
        }

    body.light .text-muted {
        color: #6c757d !important;
    }

    body.dark .text-muted {
        color: #a0a0a0 !important;
    }

    body.light .text-danger {
        color: #dc3545 !important;
    }

    body.dark .text-danger {
        color: #ff6b6b !important;
    }

    body.light h2, body.light h5 {
        color: #0d6efd;
    }

    body.dark h2, body.dark h5 {
        color: #4dabf7;
    }

    /* Đảm bảo chữ trong mọi phần tử đều hiển thị rõ */
    body.light p {
        color: black;
    }

    body.dark p {
        color: white;
    }

    /* Tùy chỉnh giao diện */
    .combo-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
    }

    .card {
        border: none;
        transition: transform 0.2s;
    }

        .card:hover {
            transform: translateY(-5px);
        }

    .card-img-top {
        border-radius: 8px 8px 0 0;
    }

    .card-body {
        padding: 15px;
    }

    .form-group label {
        font-weight: bold;
    }

    .btn {
        padding: 8px 20px;
        font-weight: bold;
    }

    .shadow {
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    body.dark .shadow {
        box-shadow: 0 4px 8px rgba(255, 255, 255, 0.1);
    }
</style>

<div class="combo-container">
    <h2 class="text-center my-4">Danh Sách Combo</h2>

    <!-- Form tìm kiếm -->
    <form method="get" class="mb-4">
        <div class="form-group">
            <label for="searchName">Tìm kiếm theo tên:</label>
            <input type="text" name="searchName" id="searchName" class="form-control" value="@Context.Request.Query["searchName"]" placeholder="Nhập tên combo..." />
        </div>
        <div class="d-flex justify-content-center mt-3">
            <button type="submit" class="btn btn-primary">Tìm kiếm</button>
        </div>
    </form>

    <!-- Hiển thị danh sách combo -->
    <div class="row mt-4">
        @foreach (var combo in Model)
        {
            if (combo.TrangThai == true) // Chỉ hiển thị khi TrangThai là true
            {
                <div class="col-md-4 mb-4">
                    <div class="card h-100 shadow">
                        <img class="card-img-top img-fluid" src="@combo.DuongDanHinh" alt="@combo.TenCombo" style="object-fit: cover; height: 200px;">
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title text-center">@combo.TenCombo</h5>
                            <p class="card-text text-muted">@combo.MoTa</p>
                            <p class="card-text text-danger fw-bold">Giá: @combo.Gia.ToString("N0") VND</p>
                            <a href="@Url.Action("DetailsComBo", "Client", new { id = combo.MaCombo })" class="btn btn-primary mt-auto">Xem chi tiết</a>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div> *@